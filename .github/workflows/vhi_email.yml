name: VHI semanal + email

on:
  schedule:
    - cron: '0 13 * * 1'   # Segunda 13:00 UTC = 10:00 BRT
  workflow_dispatch:
    inputs:
      attachments:
        description: 'Imagens a embutir (um por linha). Se vazio, usa o padrão.'
        required: false
        type: string
        default: |
          vhi_images/combined_Minas_Gerais_Sao_Paulo.png
          vhi_images/combined_Rondonia_Espirito_Santo.png
          vhi_images/Bahia_combined.png
      VHI_WEEK:
        description: 'Forçar semana (1–53). Se vazio, usa ISO atual (BRT).'
        required: false
        type: string
      VHI_MAX_LOOKBACK:
        description: 'Máx. semanas p/ voltar (default 10).'
        required: false
        type: string

jobs:
  run-and-email:
    runs-on: ubuntu-latest
    env:
      PYTHONIOENCODING: 'utf-8'
      LANG: 'C.UTF-8'
      LC_ALL: 'C.UTF-8'
      DEFAULT_ATTACHMENTS: |
        vhi_images/combined_Minas_Gerais_Sao_Paulo.png
        vhi_images/combined_Rondonia_Espirito_Santo.png
        vhi_images/Bahia_combined.png

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests pillow
          fi

      - name: Run VHI script
        env:
          VHI_WEEK: ${{ github.event.inputs.VHI_WEEK }}
          VHI_MAX_LOOKBACK: ${{ github.event.inputs.VHI_MAX_LOOKBACK }}
        run: |
          python src/data/codigo9_dadosVhi.py
          echo "Arquivos gerados:"
          ls -la vhi_images || true

      - name: Read week number
        run: |
          if [ -f vhi_images/week.txt ]; then
            echo "WEEK=$(cat vhi_images/week.txt)" >> $GITHUB_ENV
          else
            echo "WEEK=?" >> $GITHUB_ENV
          fi

      # Constrói o HTML com imagens embutidas em Base64 (sem anexos)
      - name: Build Base64 HTML
        env:
          ATTACHMENTS: ${{ github.event.inputs.attachments != '' && github.event.inputs.attachments || env.DEFAULT_ATTACHMENTS }}
        run: |
          echo "Arquivos para embutir:"
          printf "%s\n" "$ATTACHMENTS"

          i=0
          HTML=""
          while IFS= read -r path; do
            [ -z "$path" ] && continue
            i=$((i+1))
            case $i in
              1) ALT="Minas Gerais acima de Sao Paulo" ;;
              2) ALT="Rondonia acima de Espirito Santo" ;;
              3) ALT="Bahia" ;;
              *) ALT="$(basename "$path")" ;;
            esac

            if [ -f "$path" ]; then
              # codifica a imagem como Base64 numa linha (GNU base64 no runner usa -w 0)
              DATA=$(base64 -w 0 "$path")
              HTML="${HTML}<p><strong>${ALT}</strong></p><img src=\"data:image/png;base64,${DATA}\" alt=\"${ALT}\" style=\"max-width:100%;height:auto;border:1px solid #ddd\"/><br/><br/>"
            else
              HTML="${HTML}<p><strong>${ALT}</strong> (arquivo não encontrado: ${path})</p>"
            fi
          done <<< "$ATTACHMENTS"

          {
            echo "IMAGES_HTML<<EOF"
            printf "%s" "$HTML"
            echo
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: Upload images as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: vhi_images
          path: vhi_images/*.png

      # (opcional) visualizar no log o HTML gerado
      - name: Preview HTML in logs (optional)
        continue-on-error: true
        env:
          HTML_PREVIEW: ${{ env.IMAGES_HTML }}
        run: |
          echo "--- IMAGES_HTML ---"
          printf '%s\n' "$HTML_PREVIEW"

      - name: Send email (HTML com imagens embutidas) - SSL 465
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: 465
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          from: ${{ secrets.MAIL_FROM }}
          to: ${{ secrets.MAIL_TO }}
          subject: "VHI - imagens semana ${{ env.WEEK }}"
          secure: true
          html_body: |
            <div style="font-family:system-ui,Segoe UI,Arial,sans-serif;">
              <p><strong>VHI semanal (semana ${{ env.WEEK }})</strong></p>
              ${{ env.IMAGES_HTML }}
              <p style="color:#666;font-size:12px;">Envio automático – GitHub Actions.</p>
            </div>
          # Se quiser anexar também os PNGs além do inline, descomente abaixo:
          # attachments: ${{ github.event.inputs.attachments != '' && github.event.inputs.attachments || env.DEFAULT_ATTACHMENTS }}
